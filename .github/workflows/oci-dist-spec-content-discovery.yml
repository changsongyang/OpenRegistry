name: OCI Distribution Spec

on:
  workflow_call:

concurrency:
  group: content-discovery-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  content-discovery:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          PGUSER: postgres
          POSTGRES_DB: open_registry
          POSTGRES_PASSWORD: Qwerty@123
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Install Migrate CLI
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/migrate
      - name: Setup PostgreSQL Database
        run: |
          IP=`hostname -I | awk '{print $1}'`
          POSTGRESQL_URL=postgres://$PGUSER:$PGPASSWORD@$IP:5432/$PGDATABASE?sslmode=disable
          migrate -database ${POSTGRESQL_URL} -path db/migrations up
        env:
           PGDATABASE: open_registry
           PGPASSWORD: Qwerty@123
           PGUSER: postgres
      - name: start distribution server
        env:
          FILEBASE_KEY: ${{ secrets.FILEBASE_KEY }}
          FILEBASE_SECRET: ${{ secrets.FILEBASE_SECRET }}
          FILEBASE_BUCKET: ${{ secrets.FILEBASE_BUCKET }}
          FILEBASE_ENDPOINT: ${{ secrets.FILEBASE_ENDPOINT }}
          FILEBASE_RESOLVER_URL: ${{ secrets.FILEBASE_RESOLVER_URL }}
          OPENREGISTRY_SIGNUP_PAYLOAD: ${{ secrets.OPENREGISTRY_SIGNUP_PAYLOAD }}
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.16.2/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
          bash scripts/gh-actions/fill-config.sh
          bash scripts/gh-actions/build-and-run.sh
      - name: Run OCI Distribution Spec conformance tests
        uses: opencontainers/distribution-spec@v1.0.1
        env:
          OCI_ROOT_URL: ${{ env.OCI_ROOT_URL }}
          OCI_USERNAME: ${{ secrets.OPENREGISTRY_USERNAME }}
          OCI_PASSWORD: ${{ secrets.OPENREGISTRY_PASSWORD }}
          OCI_NAMESPACE: ${{ secrets.OPENREGISTRY_USERNAME }}/distribution-test
          OCI_TEST_CONTENT_DISCOVERY: 1
          OCI_HIDE_SKIPPED_WORKFLOWS: 1
          OCI_CROSSMOUNT_NAMESPACE: ${{secrets.OPENREGISTRY_USERNAME}}/distribution-cross-mount
          OCI_DEBUG: 0
          OCI_DELETE_MANIFEST_BEFORE_BLOBS: 0
      - run: mkdir -p .out/ && mv {report.html,junit.xml} .out/
        if: always()
      - name: Upload test results zip as build artifact
        uses: actions/upload-artifact@v3
        with:
          name: oci-test-results-${{ github.sha }}
          path: .out/
        if: always()
